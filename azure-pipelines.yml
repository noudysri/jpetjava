stages:
  - stage: Build_Test
    jobs:
      #During build stage we install node.js of version '14.19.1',npm of version '6.14.15',lerna bootstrap and enabling the unit test using lerna run test command
      - job: Installer
        steps:
          - checkout: self
          - task: NodeTool@0
            inputs:
              versionSpec: '14.19.1'
            displayName: 'Install Node.js'
          - task: Npm@1
            displayName: Npm install
            inputs:
              command: 'install'
              verbose: false
            condition: succeeded()
          - script: |
              npm ci
              npm run bootstrap
            displayName: 'npm install'
          - script: |
              npm run test:pwa
            displayName: 'Unit test case
# Maven
resources:
  repositories:
  - repository: jpetjave # The name used to reference this repository in the checkout step
    type: github
    endpoint: noudysri
    name: noudysri/jpetjava

  - repository: gs-spring-boot
    type: github
    endpoint: noudysri
    name: noudysri/gs-spring-boot

  # - repository: MyAzureReposGitRepository # In a different organization
  #   endpoint: MyAzureReposGitServiceConnection
  #   type: git
  #   name: mywork6/myrepo6o

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
#- checkout: jpetjava
- checkout: gs-spring-boot
# - checkout: noudysri
# # - checkout: MyAzureReposGitRepository

- script: dir $(Build.SourcesDirectory)
- script: ls

# - task: Maven@3
#   inputs:
#     mavenPomFile: 'pom.xml'
#     goals: 'install'
#     publishJUnitResults: true
#     testResultsFiles: '**/surefire-reports/TEST-*.xml'
#     javaHomeOption: 'JDKVersion'
#     mavenVersionOption: 'Default'
#     mavenAuthenticateFeed: false
#     effectivePomSkip: false
#     sonarQubeRunAnalysis: false
# - task: MavenAuthenticate@0
#   inputs:
#     artifactsFeeds: 'Demo'
# - task: SonarQubePostTest@1
# # Build your Java project and run tests with Apache Maven.
# # Add steps that analyze code, save build artifacts, deploy, and more:
# # https://docs.microsoft.com/azure/devops/pipelines/languages/java

# trigger:
# - master

# pool:
#   vmImage: 'ubuntu-latest'

# steps:
# - task: Maven@3
#   inputs:
#     mavenPomFile: 'pom.xml'
#     mavenOptions: '-Xmx3072m'
#     javaHomeOption: 'JDKVersion'
#     jdkVersionOption: '1.8'
#     jdkArchitectureOption: 'x64'
#     publishJUnitResults: true
#     testResultsFiles: '**/surefire-reports/TEST-*.xml'
#     goals: 'package'
